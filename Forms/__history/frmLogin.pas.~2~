unit frmLogin;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.MSSQL,
  FireDAC.Phys.MSSQLDef, FireDAC.VCLUI.Wait, FireDAC.Comp.UI,
  FireDAC.Phys.ODBCBase, Data.DB, FireDAC.Comp.Client, FireDAC.Stan.Param,
  FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt, FireDAC.Comp.DataSet,
  Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.Buttons;

type
  TfrmLogin = class(TForm)
    conTeste: TFDConnection;
    SQLDriverLink: TFDPhysMSSQLDriverLink;
    WaitCursor: TFDGUIxWaitCursor;
    imgFoto: TImage;
    edtLogin: TEdit;
    edtSenha: TEdit;
    lblLogin: TLabel;
    lblSenha: TLabel;
    qryLogin: TFDQuery;
    fldLoginTLOGIN: TStringField;
    fldLoginTSENHA: TStringField;
    qryLoginIFOTO: TBlobField;
    btnEntrar: TBitBtn;
    btnSair: TBitBtn;
    procedure edtLoginExit(Sender: TObject);
    procedure btnEntrarClick(Sender: TObject);
    procedure edtSenhaChange(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

implementation

uses
  ufrmMenu;

{$R *.dfm}

procedure TfrmLogin.btnEntrarClick(Sender: TObject);
var
  frmMenu :TfrmMenu;
begin
  if edtSenha.Text <> string.Empty then
  begin
    if edtSenha.Text = qryLogin.FieldByName('TSENHA').AsString then
    begin
      frmMenu := TfrmMenu.Create(Self);
      frmMenu.Show;
      Self.Close;
    end
    else
    begin
      MessageDlg('Senha incorreta',mtInformation,[mbOK],0);
    end;
  end;
end;

procedure TfrmLogin.edtLoginExit(Sender: TObject);
var
  streamFoto :TStream;
  bitmapFoto :TBitmap;
begin
  if edtLogin.Text <> string.Empty then
  begin
    qryLogin.ParamByName('login').AsString:= Trim(edtLogin.Text);
    qryLogin.Open();
    if qryLogin.RecordCount = 1 then
    begin
      streamFoto := qryLogin.CreateBlobStream(qryLogin.FieldByName('IFOTO'),bmRead);
      bitmapFoto:= TBitmap.Create;
      try
        bitmapFoto.LoadFromStream(streamFoto);
        imgFoto.Picture.Assign(bitmapFoto);
      finally
        bitmapFoto.Free;
      end;
      edtSenha.ReadOnly := False;
    end
    else
    begin
      MessageDlg('Usuario incorreto',mtInformation,[mbOK],0);
      edtSenha.ReadOnly := True;
    end;
  end;
end;

procedure TfrmLogin.edtSenhaChange(Sender: TObject);
begin
  if edtLogin.Text <> string.Empty then
  begin
    btnEntrar.Enabled := True;
  end;
end;

end.
